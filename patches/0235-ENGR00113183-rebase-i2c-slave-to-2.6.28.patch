From f3c150f4d91f11622dd98df813ac1666beb9379f Mon Sep 17 00:00:00 2001
From: Wu Guoxing <b02248@freescale.com>
Date: Wed, 10 Jun 2009 12:59:32 +0800
Subject: [PATCH] ENGR00113183 : rebase i2c slave to 2.6.28

1.rebase i2c slave to 2.6.28
2.clear ring buffer at open, to make ring buffer at a clean state.

Signed-off-by: Wu Guoxing <b02248@freescale.com>
---
 drivers/i2c-slave/i2c_slave_core.c   |    7 +++++--
 drivers/i2c-slave/i2c_slave_device.c |    5 +++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/i2c-slave/i2c_slave_core.c b/drivers/i2c-slave/i2c_slave_core.c
index 0926581..0592d53 100644
--- a/drivers/i2c-slave/i2c_slave_core.c
+++ b/drivers/i2c-slave/i2c_slave_core.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2007-2008 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2007-2009 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -78,7 +78,7 @@ static ssize_t i2c_slave_write(struct file *fd, const char __user *buf,
 		goto error1;
 	}
 
-	ret = i2c_slave_device_write(dev, len, (u8 *) buf);
+	ret = i2c_slave_device_write(dev, len, (u8 *) kbuf);
 
       error1:
 	kfree(kbuf);
@@ -111,6 +111,9 @@ static int i2c_slave_open(struct inode *inode, struct file *fd)
 		goto error;
 	}
 
+	i2c_slave_rb_clear(dev->receive_buffer);
+	i2c_slave_rb_clear(dev->send_buffer);
+
 	if (i2c_slave_device_start(dev)) {
 		ret = -EBUSY;
 		goto error;
diff --git a/drivers/i2c-slave/i2c_slave_device.c b/drivers/i2c-slave/i2c_slave_device.c
index e1d9a83..bfe3980 100644
--- a/drivers/i2c-slave/i2c_slave_device.c
+++ b/drivers/i2c-slave/i2c_slave_device.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2007-2008 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2007-2009 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -16,6 +16,7 @@
 #include <linux/device.h>
 #include <linux/kernel.h>
 #include <linux/sched.h>
+#include <linux/kdev_t.h>
 #include "i2c_slave_device.h"
 static i2c_slave_device_t *i2c_slave_devices[I2C_SLAVE_DEVICE_MAX];
 struct class *i2c_slave_class;
@@ -114,7 +115,7 @@ int i2c_slave_device_register(i2c_slave_device_t *device)
 {
 	device->dev = device_create(i2c_slave_class, NULL,
 				    MKDEV(i2c_slave_major, device->id),
-				    "slave-i2c-%d", device->id);
+				    NULL, "slave-i2c-%d", device->id);
 	if (!device->dev) {
 		return -1;
 	}
-- 
1.5.4.4

