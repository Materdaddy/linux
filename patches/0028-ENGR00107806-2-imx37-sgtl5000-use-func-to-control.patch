From 95ba89147094f4cf1dc63853d3146011e496bc22 Mon Sep 17 00:00:00 2001
From: Richard Zhao <b20223@freescale.com>
Date: Tue, 17 Feb 2009 19:36:35 +0800
Subject: [PATCH] ENGR00107806-2 imx37: sgtl5000: use func to control spk amp shutdown

Becuase spk amp shutdown pin can be connected to PM gpo or cpu GPIO, I use a
function amp_enable in arch/arm/mach-xxx/mxxxx-3stack.c to controll shutdown.
This is imx37 specific modification.

Signed-off-by: Richard Zhao <b20223@freescale.com>
---
 arch/arm/mach-mx37/mx37_3stack.c |   44 ++++++++++++++++++++++++++++++++++++-
 1 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-mx37/mx37_3stack.c b/arch/arm/mach-mx37/mx37_3stack.c
index 301a7fe..8b6ca09 100644
--- a/arch/arm/mach-mx37/mx37_3stack.c
+++ b/arch/arm/mach-mx37/mx37_3stack.c
@@ -727,6 +727,10 @@ static void mxc_init_bluetooth(void)
 
 #if defined(CONFIG_SND_SOC_IMX_3STACK_SGTL5000) \
     || defined(CONFIG_SND_SOC_IMX_3STACK_SGTL5000_MODULE)
+static int mxc_sgtl5000_plat_init(void);
+static int mxc_sgtl5000_plat_finit(void);
+static int mxc_sgtl5000_amp_enable(int enable);
+
 static struct mxc_sgtl5000_platform_data sgtl5000_data = {
 	.ssi_num = 1,
 	.src_port = 2,
@@ -735,11 +739,12 @@ static struct mxc_sgtl5000_platform_data sgtl5000_data = {
 	.hp_status = headphone_det_status,
 	.vddio_reg = "SW3",
 	.vdda_reg = "VAUDIO",
-	.amp_gpo = "GPO2",
+	.amp_enable = mxc_sgtl5000_amp_enable,
 	.vddio = 1850000,
 	.vdda = 2775000,
 	.vddd = 0,
-	.sysclk = 8300000,
+	.init = mxc_sgtl5000_plat_init,
+	.finit = mxc_sgtl5000_plat_finit,
 };
 
 static struct platform_device sgtl5000_device = {
@@ -750,6 +755,41 @@ static struct platform_device sgtl5000_device = {
 		},
 };
 
+static int mxc_sgtl5000_plat_init(void)
+{
+	struct regulator *reg;
+	reg = regulator_get(&sgtl5000_device.dev, "GPO2");
+	if (IS_ERR(reg))
+		return -EINVAL;
+	sgtl5000_data.priv = reg;
+	return 0;
+}
+
+static int mxc_sgtl5000_plat_finit(void)
+{
+	struct regulator *reg;
+	reg = sgtl5000_data.priv;
+	if (reg) {
+		regulator_put(reg, &sgtl5000_device.dev);
+		sgtl5000_data.priv = NULL;
+	}
+	return 0;
+}
+
+static int mxc_sgtl5000_amp_enable(int enable)
+{
+	struct regulator *reg;
+	reg = sgtl5000_data.priv;
+
+	if (!reg)
+		return -EINVAL;
+	if (enable)
+		regulator_enable(reg);
+	else
+		regulator_disable(reg);
+	return 0;
+}
+
 static void mxc_sgtl5000_init(void)
 {
 	int err, pin;
-- 
1.5.4.4

