From 28902fc82deb050562b9f5c5f107833191f650f5 Mon Sep 17 00:00:00 2001
From: Jun Li <r65092@freescale.com>
Date: Wed, 18 Feb 2009 12:38:47 +0800
Subject: [PATCH] ENGR00107857 i.MX31 build error when usb Host2 is not selected.

if Host2 is not selected in menuconfig, can not find usbh2_get_xcvr_power
and usbh2_put_xcvr_power definition when link.

Signed-off-by: Li Jun <r65092@freescale.com>
---
 arch/arm/mach-mx3/usb_h2.c     |   47 ++++++++++++----------------------------
 arch/arm/plat-mxc/usb_common.c |   32 ++++++++++++--------------
 2 files changed, 29 insertions(+), 50 deletions(-)

diff --git a/arch/arm/mach-mx3/usb_h2.c b/arch/arm/mach-mx3/usb_h2.c
index 6ecc8bf..d47f26b 100644
--- a/arch/arm/mach-mx3/usb_h2.c
+++ b/arch/arm/mach-mx3/usb_h2.c
@@ -13,6 +13,7 @@
 
 #include <linux/kernel.h>
 #include <linux/types.h>
+#include <asm/mach-types.h>
 #include <linux/platform_device.h>
 #include <linux/fsl_devices.h>
 #include <linux/usb/fsl_xcvr.h>
@@ -44,43 +45,23 @@ static struct resource usbh2_resources[] = {
 	},
 };
 
-void usbh2_get_xcvr_power(struct device *dev)
-{
-	struct regulator *usbh2_regux;
-
-	usbh2_regux = regulator_get(dev, "GPO1");
-	regulator_enable(usbh2_regux);
-	((struct fsl_usb2_platform_data *)dev->platform_data)->
-		xcvr_pwr->regu1 = usbh2_regux;
-
-	usbh2_regux = regulator_get(dev, "GPO3");
-	regulator_enable(usbh2_regux);
-	((struct fsl_usb2_platform_data *)dev->platform_data)->
-		xcvr_pwr->regu2 = usbh2_regux;
-}
-EXPORT_SYMBOL(usbh2_get_xcvr_power);
-
-void usbh2_put_xcvr_power(struct device *dev)
-{
-	struct regulator *usbh2_regux;
-
-	usbh2_regux = ((struct fsl_usb2_platform_data *)dev->
-			platform_data)->xcvr_pwr->regu2;
-	regulator_disable(usbh2_regux);
-	regulator_put(usbh2_regux);
-
-	usbh2_regux = ((struct fsl_usb2_platform_data *)dev->
-			platform_data)->xcvr_pwr->regu1;
-	regulator_disable(usbh2_regux);
-	regulator_put(usbh2_regux);
-}
-EXPORT_SYMBOL(usbh2_put_xcvr_power);
-
-
 static int __init usbh2_init(void)
 {
 	pr_debug("%s: \n", __func__);
 
+	if (machine_is_mx31_3ds()) {
+		struct regulator *usbh2_regux;
+		usbh2_config.xcvr_pwr =
+			kmalloc(sizeof(struct fsl_xcvr_power), GFP_KERNEL);
+		if (!(usbh2_config.xcvr_pwr))
+			return -ENOMEM;
+
+		usbh2_regux = regulator_get(NULL, "GPO1");
+		usbh2_config.xcvr_pwr->regu1 = usbh2_regux;
+		usbh2_regux = regulator_get(NULL, "GPO3");
+		usbh2_config.xcvr_pwr->regu2 = usbh2_regux;
+	}
+
 	host_pdev_register(usbh2_resources, ARRAY_SIZE(usbh2_resources),
 			   &usbh2_config);
 	return 0;
diff --git a/arch/arm/plat-mxc/usb_common.c b/arch/arm/plat-mxc/usb_common.c
index 4d1d978..ede2280 100644
--- a/arch/arm/plat-mxc/usb_common.c
+++ b/arch/arm/plat-mxc/usb_common.c
@@ -385,8 +385,6 @@ static void usbh2_set_serial_xcvr(void)
 	msleep(100);
 }
 
-extern void usbh2_get_xcvr_power(struct device *dev);
-extern void usbh2_put_xcvr_power(struct device *dev);
 extern void gpio_usbh1_setback_stp(void);
 extern void gpio_usbh2_setback_stp(void);
 
@@ -409,17 +407,6 @@ int fsl_usb_host_init(struct platform_device *pdev)
 	if (fsl_check_usbclk() != 0)
 		return -EINVAL;
 
-	/* set host2 usb phy usb3317 power supply for imx31 3 stack */
-	if ((pdata->xcvr_type == PORTSC_PTS_ULPI) && (machine_is_mx31_3ds())) {
-		pdata->xcvr_pwr =
-		    kmalloc(sizeof(struct fsl_xcvr_power), GFP_KERNEL);
-		if (!(pdata->xcvr_pwr))
-			return -ENOMEM;
-
-		pdata->xcvr_pwr->usb_pdev = pdev;
-		usbh2_get_xcvr_power(&(pdev->dev));
-	}
-
 	pr_debug("%s: grab pins\n", __func__);
 	if (pdata->gpio_usb_active())
 		return -EINVAL;
@@ -435,6 +422,14 @@ int fsl_usb_host_init(struct platform_device *pdev)
 		clk_put(usb_clk);
 	}
 
+	/* enable board power supply for xcvr */
+	if (pdata->xcvr_pwr) {
+		if (pdata->xcvr_pwr->regu1)
+			regulator_enable(pdata->xcvr_pwr->regu1);
+		if (pdata->xcvr_pwr->regu2)
+			regulator_enable(pdata->xcvr_pwr->regu2);
+	}
+
 	if (xops->init)
 		xops->init(xops);
 
@@ -493,10 +488,13 @@ void fsl_usb_host_uninit(struct fsl_usb2_platform_data *pdata)
 			USBCTRL |= UCTRL_XCSH2;
 		clk_disable(usb_clk);
 	}
-	else if ((pdata->xcvr_type == PORTSC_PTS_ULPI)
-		 && (machine_is_mx31_3ds())) {
-		usbh2_put_xcvr_power(&(pdata->xcvr_pwr->usb_pdev->dev));
-		kfree(pdata->xcvr_pwr);
+
+	/* disable board power supply for xcvr */
+	if (pdata->xcvr_pwr) {
+		if (pdata->xcvr_pwr->regu1)
+			regulator_disable(pdata->xcvr_pwr->regu1);
+		if (pdata->xcvr_pwr->regu2)
+			regulator_disable(pdata->xcvr_pwr->regu2);
 	}
 
 	if (cpu_is_mx51()) {
-- 
1.5.4.4

