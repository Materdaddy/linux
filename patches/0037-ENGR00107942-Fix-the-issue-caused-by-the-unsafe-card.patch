From 6d989d22d797ec3a9003d78a1d93243a8994192c Mon Sep 17 00:00:00 2001
From: Richard Zhu <r65037@freescale.com>
Date: Thu, 19 Feb 2009 10:57:29 +0800
Subject: [PATCH] ENGR00107942 Fix the issue caused by the unsafe card removal

The sd/mmc driver would be halt after the card has been
removed when there is a data transmission in progress.
Reset all the controller when there are any errors.

Signed-off-by: Richard Zhu <r65037@freescale.com>
---
 drivers/mmc/host/mxc_mmc.c |   30 ++++++++++++++++++++++++++++++
 1 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/drivers/mmc/host/mxc_mmc.c b/drivers/mmc/host/mxc_mmc.c
index c532ccf..ccf766c 100644
--- a/drivers/mmc/host/mxc_mmc.c
+++ b/drivers/mmc/host/mxc_mmc.c
@@ -586,10 +586,24 @@ static int mxcmci_cmd_done(struct mxcmci_host *host, unsigned int stat)
 		__raw_writel(STATUS_TIME_OUT_RESP, host->base + MMC_STATUS);
 		pr_debug("%s: CMD TIMEOUT\n", DRIVER_NAME);
 		cmd->error = -ETIMEDOUT;
+		/*
+		 * Reinitialized the controller to clear the unknown
+		 * error state.
+		 */
+		mxcmci_softreset(host);
+		__raw_writel(READ_TO_VALUE, host->base + MMC_READ_TO);
+		__raw_writel(INT_CNTR_END_CMD_RES, host->base + MMC_INT_CNTR);
 	} else if (stat & STATUS_RESP_CRC_ERR && cmd->flags & MMC_RSP_CRC) {
 		__raw_writel(STATUS_RESP_CRC_ERR, host->base + MMC_STATUS);
 		printk(KERN_ERR "%s: cmd crc error\n", DRIVER_NAME);
 		cmd->error = -EILSEQ;
+		/*
+		 * Reinitialized the controller to clear the unknown
+		 * error state.
+		 */
+		mxcmci_softreset(host);
+		__raw_writel(READ_TO_VALUE, host->base + MMC_READ_TO);
+		__raw_writel(INT_CNTR_END_CMD_RES, host->base + MMC_INT_CNTR);
 	}
 
 	/* Read response from the card */
@@ -680,12 +694,28 @@ static int mxcmci_cmd_done(struct mxcmci_host *host, unsigned int stat)
 			data->error = -ETIMEDOUT;
 			__raw_writel(STATUS_TIME_OUT_READ,
 				     host->base + MMC_STATUS);
+			/*
+			 * Reinitialized the controller to clear the unknown
+			 * error state.
+			 */
+			mxcmci_softreset(host);
+			__raw_writel(READ_TO_VALUE, host->base + MMC_READ_TO);
+			__raw_writel(INT_CNTR_END_CMD_RES,
+				     host->base + MMC_INT_CNTR);
 		} else if (status & STATUS_READ_CRC_ERR) {
 			pr_debug("%s: Read CRC error occurred\n", DRIVER_NAME);
 			if (SD_APP_SEND_SCR != cmd->opcode)
 				data->error = -EILSEQ;
 			__raw_writel(STATUS_READ_CRC_ERR,
 				     host->base + MMC_STATUS);
+			/*
+			 * Reinitialized the controller to clear the unknown
+			 * error state.
+			 */
+			mxcmci_softreset(host);
+			__raw_writel(READ_TO_VALUE, host->base + MMC_READ_TO);
+			__raw_writel(INT_CNTR_END_CMD_RES,
+				     host->base + MMC_INT_CNTR);
 		}
 		__raw_writel(STATUS_READ_OP_DONE, host->base + MMC_STATUS);
 
-- 
1.5.4.4

